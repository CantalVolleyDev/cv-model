package com.jtouzy.cv.model.classes;

import com.jtouzy.dao.annotations.DAOTable;
import com.jtouzy.dao.annotations.DAOTableField;
import com.jtouzy.dao.db.DBType;

@DAOTable(tableName = "sai")
public class Season {
	public static final String ID = "numsai";
	public static final String START_YEAR = "prdsai";
	public static final String END_YEAR = "prfsai";
	public static final String CURRENT = "encsai";
	public static final String REGISTRATION_OPEN = "iscsai"; 
	
	@DAOTableField(id = true, autoGenerated = true, name = Season.ID, required = true, type = DBType.INTEGER)
	private Integer identifier;
	@DAOTableField(name = Season.START_YEAR, length = 4, required = true, type = DBType.VARCHAR)
	private String startYear;
	@DAOTableField(name = Season.END_YEAR, length = 4, required = true, type = DBType.VARCHAR)
	private String endYear;
	@DAOTableField(name = Season.CURRENT, required = true, type = DBType.BOOLEAN)
	private boolean current;
	@DAOTableField(name = Season.REGISTRATION_OPEN, type = DBType.BOOLEAN)
	private boolean registrationOpen;

	public Integer getIdentifier() {
		return identifier;
	}

	public void setIdentifier(Integer identifier) {
		this.identifier = identifier;
	}

	public String getStartYear() {
		return startYear;
	}

	public void setStartYear(String startYear) {
		this.startYear = startYear;
	}

	public String getEndYear() {
		return endYear;
	}

	public void setEndYear(String endYear) {
		this.endYear = endYear;
	}
	
	public boolean isCurrent() {
		return current;
	}

	public void setCurrent(boolean current) {
		this.current = current;
	}
	
	public boolean isRegistrationOpen() {
		return registrationOpen;
	}

	public void setRegistrationOpen(boolean registrationOpen) {
		this.registrationOpen = registrationOpen;
	}

	@Override
	public String toString() {
		StringBuilder builder = new StringBuilder();
		builder.append("Season [identifier=");
		builder.append(identifier);
		builder.append(", startYear=");
		builder.append(startYear);
		builder.append(", endYear=");
		builder.append(endYear);
		builder.append(", current=");
		builder.append(current);
		builder.append(", registrationOpen=");
		builder.append(registrationOpen);
		builder.append("]");
		return builder.toString();
	}
}
